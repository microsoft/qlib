name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

#on: [push]

#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: [3.6, 3.7, 3.8, 3.9]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#          python-version: ${{ matrix.python-version }}
#
#
#    - name: Display Python version
#      run: python -c "import sys; print(sys.version)"


    - name: Install Qlib with pip
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          $CONDA\\python.exe -m pip install numpy==1.19.5
          $CONDA\\python.exe -c "import sys; print(sys.version)"
          $CONDA\\python.exe -m pip install pyqlib --ignore-installed ruamel.yaml numpy --user
        else
          sudo $CONDA/bin/python -m pip install numpy==1.19.5
          sudo $CONDA/bin/python -V
          sudo $CONDA/bin/python -c "import sys; print(sys.version)"
          sudo $CONDA/bin/python -m pip install pyqlib --ignore-installed ruamel.yaml numpy
        fi
      shell: bash

#    - name: Test data downloads
#      run: |
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data --interval 1d --region cn
#        else
#          $CONDA/bin/python scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data --interval 1d --region cn
#        fi
#      shell: bash
#
#    - name: Test workflow by config (install from pip)
#      run: |
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe qlib\\workflow\\cli.py examples\\benchmarks\\LightGBM\\workflow_config_lightgbm_Alpha158.yaml
#          $CONDA\\python.exe -m pip uninstall -y pyqlib
#        else
#          $CONDA/bin/python qlib/workflow/cli.py examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml
#          sudo $CONDA/bin/python -m pip uninstall -y pyqlib
#        fi
#      shell: bash
#
#    # Test Qlib installed from source
#    - name: Install Qlib from source
#      run: |
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe -m pip install --upgrade cython
#          $CONDA\\python.exe -m pip install numpy jupyter jupyter_contrib_nbextensions
#          $CONDA\\python.exe -m pip install -U scipy scikit-learn # installing without this line will cause errors on GitHub Actions, while instsalling locally won't
#          $CONDA\\python.exe setup.py install
#        else
#          sudo $CONDA/bin/python -m pip install --upgrade cython
#          sudo $CONDA/bin/python -m pip install numpy jupyter jupyter_contrib_nbextensions
#          sudo $CONDA/bin/python -m pip install -U scipy scikit-learn # installing without this line will cause errors on GitHub Actions, while instsalling locally won't
#          sudo $CONDA/bin/python setup.py install
#        fi
#      shell: bash
#
#    - name: Install test dependencies
#      run: |
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe -m pip install --upgrade pip
#          $CONDA\\python.exe -m pip install black pytest
#        else
#          sudo $CONDA/bin/python -m pip install --upgrade pip
#          sudo $CONDA/bin/python -m pip install black pytest
#        fi
#      shell: bash
#
#    - name: Unit tests with Pytest
#      run: |
#        cd tests
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe -m pytest . --durations=0
#        else
#          $CONDA/bin/python -m pytest . --durations=0
#        fi
#      shell: bash
#
#    - name: Test workflow by config (install from source)
#      run: |
#        if [ "$RUNNER_OS" == "Windows" ]; then
#          $CONDA\\python.exe qlib\\workflow\\cli.py examples\\benchmarks\\LightGBM\\workflow_config_lightgbm_Alpha158.yaml
#        else
#          $CONDA/bin/python qlib/workflow/cli.py examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml
#        fi
#      shell: bash