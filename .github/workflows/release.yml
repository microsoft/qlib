name: Release
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  deploy_with_manylinux:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: Release please
        id: release_please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.PAT }}
          release-type: simple
      - uses: actions/checkout@v4
        if: ${{ steps.release_please.outputs.release_created }}
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        if: ${{ steps.release_please.outputs.release_created }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheel on Linux
        if: ${{ steps.release_please.outputs.release_created }}
        uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
        with:
          python-versions: 'cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312'
          build-requirements: 'numpy cython'
      - name: Install dependencies
        if: ${{ steps.release_please.outputs.release_created }}
        run: |
          python -m pip install twine
      - name: Upload to PyPi
        if: ${{ steps.release_please.outputs.release_created }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine check dist/pyqlib-*-manylinux*.whl
          twine upload dist/pyqlib-*-manylinux*.whl --verbose

  check_status:
    needs: deploy_with_manylinux
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - run: echo "All bdist_wheel jobs succeeded."
